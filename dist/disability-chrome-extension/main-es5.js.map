{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","title","focusSelected","textHighlightingSelected","increaseTextButtonSelected","textToSpeechSelected","autoScrollingSelected","focusIconColor","currentFocusIcon","currentTextHighlightingIcon","currentIncreaseTextButtonIcon","currentTextToSpeechIcon","currentAutoScrollIcon","blurIntensity","textHighlightingColor","textSizeColor","textSize","chrome","tabs","query","active","currentWindow","message","sendMessage","id","setTextToSpeechIcons","setFocusIcons","setTextHighlightingIcons","setAutoScrollIcons","setIncreaseButtonSizeIcons","updateBlurIntensity","updateTextHighlightingColor","updateButtonColor","updateTextSize","AppModule","routes","AppRoutingModule","forRoot","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/// <reference types=\"chrome\"/>\nimport { Component, OnInit } from \"@angular/core\";\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent implements OnInit {\n  title = \"disability-chrome-extension\";\n  focusSelected = false;\n  textHighlightingSelected = false;\n  increaseTextButtonSelected = false;\n  textToSpeechSelected = false;\n  autoScrollingSelected = false;\n  focusIconColor = \"red\";\n  currentFocusIcon = \"pi pi-eye-slash\";\n  currentTextHighlightingIcon = \"pi pi-eye-slash\";\n  currentIncreaseTextButtonIcon = \"pi pi-eye-slash\";\n  currentTextToSpeechIcon = \"pi pi-eye-slash\";\n  currentAutoScrollIcon = \"pi pi-eye-slash\";\n  blurIntensity: number = 3;\n  textHighlightingColor: string = \"#ffff00\";\n  textSizeColor: string = \"#ff0000\";\n  textSize: number = 110;\n\n  ngOnInit(): void {\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      let message = \"disableTextToSpeech\";\n      chrome.tabs.sendMessage(tabs[0].id, message);\n    });\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      chrome.tabs.sendMessage(tabs[0].id, \"disableFocusHoveredArea\");\n    });\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      let message = \"disableAutoScrolling\";\n      chrome.tabs.sendMessage(tabs[0].id, message);\n    });\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      chrome.tabs.sendMessage(tabs[0].id, \"disableIncreaseTextButton\");\n    });\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      let message = \"disableTextHighlighting\";\n      chrome.tabs.sendMessage(tabs[0].id, message);\n    });\n  }\n\n  setFocusIcons() {\n    if (this.focusSelected) {\n      this.currentFocusIcon = \"pi pi-eye\";\n      this.focusIconColor = \"green\";\n    } else {\n      this.currentFocusIcon = \"pi pi-eye-slash\";\n      this.focusIconColor = \"red\";\n    }\n  }\n\n  setTextHighlightingIcons() {\n    if (this.textHighlightingSelected) {\n      this.currentTextHighlightingIcon = \"pi pi-eye\";\n    } else {\n      this.currentTextHighlightingIcon = \"pi pi-eye-slash\";\n    }\n  }\n\n  onTextToSpeechClick() {\n    this.textToSpeechSelected = !this.textToSpeechSelected;\n    this.setTextToSpeechIcons();\n\n    if (this.textToSpeechSelected) {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        let message = \"enableTextToSpeech\";\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    } else {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        let message = \"disableTextToSpeech\";\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    }\n  }\n\n  setTextToSpeechIcons() {\n    if (this.textToSpeechSelected) {\n      this.currentTextToSpeechIcon = \"pi pi-eye\";\n    } else {\n      this.currentTextToSpeechIcon = \"pi pi-eye-slash\";\n    }\n  }\n\n  setIncreaseButtonSizeIcons() {\n    if (this.increaseTextButtonSelected) {\n      this.currentIncreaseTextButtonIcon = \"pi pi-eye\";\n    } else {\n      this.currentIncreaseTextButtonIcon = \"pi pi-eye-slash\";\n    }\n  }\n\n  setAutoScrollIcons() {\n    if (this.autoScrollingSelected) {\n      this.currentAutoScrollIcon = \"pi pi-eye\";\n    } else {\n      this.currentAutoScrollIcon = \"pi pi-eye-slash\";\n    }\n  }\n\n  onFocusClick() {\n    this.focusSelected = !this.focusSelected;\n    this.setFocusIcons();\n    if (this.focusSelected) {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        let message = \"enableFocusHoveredArea:\" + this.blurIntensity;\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    } else {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        chrome.tabs.sendMessage(tabs[0].id, \"disableFocusHoveredArea\");\n      });\n    }\n  }\n\n  updateBlurIntensity() {\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      let message = \"updateBlurIntensity:\" + this.blurIntensity;\n      chrome.tabs.sendMessage(tabs[0].id, message);\n    });\n  }\n\n  onTextHighlightingClick() {\n    this.textHighlightingSelected = !this.textHighlightingSelected;\n    this.setTextHighlightingIcons();\n\n    if (this.textHighlightingSelected) {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        let message = \"enableTextHighlighting\";\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    } else {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        let message = \"disableTextHighlighting\";\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    }\n  }\n\n  onAutoScrollButtonClick() {\n    this.autoScrollingSelected = !this.autoScrollingSelected;\n    this.setAutoScrollIcons();\n\n    if (this.autoScrollingSelected) {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        let message = \"enableAutoScrolling\";\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    } else {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        let message = \"disableAutoScrolling\";\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    }\n  }\n\n  onIncreaseTextButtonClick() {\n    this.increaseTextButtonSelected = !this.increaseTextButtonSelected;\n    this.setIncreaseButtonSizeIcons();\n\n    if (this.increaseTextButtonSelected) {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        let message = \"enableIncreaseTextButton:\" + this.textSizeColor;\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    } else {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        chrome.tabs.sendMessage(tabs[0].id, \"disableIncreaseTextButton\");\n      });\n    }\n  }\n  updateButtonColor() {\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      let message = \"updateButtonColor:\" + this.textSizeColor;\n      chrome.tabs.sendMessage(tabs[0].id, message);\n    });\n  }\n\n  updateTextHighlightingColor() {\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      let message = \"updateTextHighlightingColor:\" + this.textHighlightingColor;\n      chrome.tabs.sendMessage(tabs[0].id, message);\n    });\n  }\n\n  updateTextSize() {\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      let message = \"updateTextSize:\" + this.textSize;\n      chrome.tabs.sendMessage(tabs[0].id, message);\n    });\n  }\n}\n","<div class=\"body\">\n  <div class=\"header\">\n    <img src=\"icons/icon.png\" alt=\"Logo\" class=\"center\" />\n  </div>\n  <div class=\"space\">\n    <div>\n      <p-panel\n        header=\"Focus Content\"\n        [toggleable]=\"true\"\n        iconPos=\"end\"\n        collapsed=\"true\"\n      >\n        <ng-template pTemplate=\"icons\">\n          <button\n            pButton\n            class=\"p-panel-header-icon p-link\"\n            (click)=\"onFocusClick()\"\n            pTooltip=\"Toggle focused content on the page\"\n          >\n            <span [class]=\"currentFocusIcon\" style=\"font-size: 1.5rem\"></span>\n          </button>\n        </ng-template>\n        <div>\n          <p>\n            This helps focus on what matters. Improve your focus by turning on\n            this extension. It will blur the content around the page, keeping\n            important headers like navigation bars.\n          </p>\n          <h5 *ngIf=\"focusSelected\">Blur Intensity: {{ blurIntensity }}px</h5>\n          <h5 *ngIf=\"!focusSelected\">Toggle focus to change blur intensity</h5>\n          <p-slider\n            [animate]=\"true\"\n            [(ngModel)]=\"blurIntensity\"\n            [step]=\"1\"\n            [min]=\"1\"\n            [max]=\"6\"\n            [disabled]=\"!focusSelected\"\n            (onSlideEnd)=\"updateBlurIntensity()\"\n          ></p-slider>\n        </div>\n      </p-panel>\n    </div>\n\n    <div class=\"less-space\">\n      <p-panel\n        header=\"Text Highlighting\"\n        [toggleable]=\"true\"\n        iconPos=\"end\"\n        collapsed=\"true\"\n      >\n        <ng-template pTemplate=\"icons\">\n          <button\n            pButton\n            class=\"p-panel-header-icon p-link\"\n            (click)=\"onTextHighlightingClick()\"\n            pTooltip=\"Toggle text highlighting on the page\"\n          >\n            <span\n              [class]=\"currentTextHighlightingIcon\"\n              style=\"font-size: 1.5rem\"\n            ></span>\n          </button>\n        </ng-template>\n        <div>\n          <p>\n            This makes reading paragraphs and text alike a lot easier. It will\n            highlight the text you are reading in order to make for a smoother\n            reading experience.\n          </p>\n          <h5 *ngIf=\"textHighlightingSelected\">\n            Highlight Color: {{ textHighlightingColor }}\n          </h5>\n          <h5 *ngIf=\"!textHighlightingSelected\">Select button color</h5>\n          <p-colorPicker\n            [(ngModel)]=\"textHighlightingColor\"\n            [inline]=\"true\"\n            [disabled]=\"!textHighlightingSelected\"\n            (onChange)=\"updateTextHighlightingColor()\"\n          ></p-colorPicker>\n        </div>\n      </p-panel>\n    </div>\n\n    <div class=\"less-space\">\n      <p-panel\n        header=\"Increase Text and Button Sizing\"\n        [toggleable]=\"true\"\n        iconPos=\"end\"\n        collapsed=\"true\"\n        [class.color]=\"focusIconColor\"\n      >\n        <ng-template pTemplate=\"icons\">\n          <button\n            pButton\n            class=\"p-panel-header-icon p-link\"\n            (click)=\"onIncreaseTextButtonClick()\"\n            pTooltip=\"Toggle increased text and button sizing\"\n          >\n            <span\n              [class]=\"currentIncreaseTextButtonIcon\"\n              style=\"font-size: 1.5rem\"\n            ></span>\n          </button>\n        </ng-template>\n\n        <div>\n          <p>\n            This helps increase the size of buttons, and users can select color to make buttons easier to read.\n          </p>\n          <h5 *ngIf=\"increaseTextButtonSelected\">\n            Button Color: {{ textSizeColor }}\n          </h5>\n          <h5 *ngIf=\"!increaseTextButtonSelected\">Select button color</h5>\n          <p-colorPicker\n            [(ngModel)]=\"textSizeColor\"\n            [inline]=\"true\"\n            [disabled]=\"!increaseTextButtonSelected\"\n            (onChange)=\"updateButtonColor()\"\n          ></p-colorPicker>\n          <h5 *ngIf=\"increaseTextButtonSelected\">Text Size: {{ textSize }}%</h5>\n          <h5 *ngIf=\"!increaseTextButtonSelected\">Select text size</h5>\n          <p-slider\n            [animate]=\"true\"\n            [(ngModel)]=\"textSize\"\n            [step]=\"10\"\n            [min]=\"110\"\n            [max]=\"150\"\n            [disabled]=\"!increaseTextButtonSelected\"\n            (onSlideEnd)=\"updateTextSize()\"\n          ></p-slider>\n        </div>\n      </p-panel>\n    </div>\n\n    <div class=\"less-space\">\n      <p-panel\n        header=\"Text-to-Speech\"\n        [toggleable]=\"true\"\n        iconPos=\"end\"\n        collapsed=\"true\"\n      >\n        <ng-template pTemplate=\"icons\">\n          <button\n            pButton\n            class=\"p-panel-header-icon p-link\"\n            (click)=\"onTextToSpeechClick()\"\n            pTooltip=\"Toggle text-to-speech on this page\"\n          >\n            <span\n              [class]=\"currentTextToSpeechIcon\"\n              style=\"font-size: 1.5rem\"\n            ></span>\n          </button>\n        </ng-template>\n        <div>\n          <p>\n            It will speak whatever text is being selected. Use the left and right arrow keys to\n            change the selection. Make sure to click somewhere on the page before moving the arrow keys.\n          </p>\n        </div>\n      </p-panel>\n    </div>\n\n    <div class=\"less-space\">\n      <p-panel\n        header=\"Auto Scrolling\"\n        [toggleable]=\"true\"\n        iconPos=\"end\"\n        collapsed=\"true\"\n      >\n        <ng-template pTemplate=\"icons\">\n          <button\n            pButton\n            class=\"p-panel-header-icon p-link\"\n            (click)=\"onAutoScrollButtonClick()\"\n            pTooltip=\"Toggle keyboard auto scrolling on the page\"\n          >\n            <span\n              [class]=\"currentAutoScrollIcon\"\n              style=\"font-size: 1.5rem\"\n            ></span>\n          </button>\n        </ng-template>\n        <div>\n          <p>\n            This lets you scroll through content easy! Use the W and S\n            keys to jump to important content quickly. Make sure to click somewhere on the page before moving the arrow keys.\n          </p>\n        </div>\n      </p-panel>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {ButtonModule} from 'primeng/button';\nimport {CardModule} from 'primeng/card';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {SelectButtonModule} from 'primeng/selectbutton';\nimport {PanelModule} from 'primeng/panel';\nimport {MenuModule} from 'primeng/menu';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {TooltipModule} from 'primeng/tooltip';\nimport {SliderModule} from 'primeng/slider';\n\nimport {ColorPickerModule} from 'primeng/colorpicker';\n\n\n@NgModule({\n  declarations: [\n    AppComponent, \n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    AppRoutingModule,\n    ButtonModule,\n    CardModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SelectButtonModule,\n    PanelModule,\n    MenuModule,\n    TooltipModule,\n    SliderModule,\n    ColorPickerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: []\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}