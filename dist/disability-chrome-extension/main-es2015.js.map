{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/// <reference types=\"chrome\"/>\nimport { Component, OnInit } from \"@angular/core\";\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent implements OnInit {\n  title = \"disability-chrome-extension\";\n  focusSelected = false;\n  textHighlightingSelected = false;\n  increaseTextButtonSelected = false;\n  textToSpeechSelected = false;\n  autoScrollingSelected = false;\n  focusIconColor = \"red\";\n  currentFocusIcon = \"pi pi-eye-slash\";\n  currentTextHighlightingIcon = \"pi pi-eye-slash\";\n  currentIncreaseTextButtonIcon = \"pi pi-eye-slash\";\n  currentTextToSpeechIcon = \"pi pi-eye-slash\";\n  currentAutoScrollIcon = \"pi pi-eye-slash\";\n  blurIntensity: number = 3;\n  color: string;\n  textSize: number = 110;\n\n  ngOnInit() {\n    // chrome.storage.sync.get(['focusSelected'], function(result) {\n    //   this.focusSelected = result;\n    //   this.setFocusIcons();\n    // });\n  }\n\n  setFocusIcons() {\n    if (this.focusSelected) {\n      this.currentFocusIcon = \"pi pi-eye\";\n      this.focusIconColor = \"green\";\n    } else {\n      this.currentFocusIcon = \"pi pi-eye-slash\";\n      this.focusIconColor = \"red\";\n    }\n  }\n\n  setTextHighlightingIcons() {\n    if (this.textHighlightingSelected) {\n      this.currentTextHighlightingIcon = \"pi pi-eye\";\n    } else {\n      this.currentTextHighlightingIcon = \"pi pi-eye-slash\";\n    }\n  }\n\n  onTextToSpeechClick() {\n    this.textToSpeechSelected = !this.textToSpeechSelected;\n    this.setTextToSpeechIcons();\n\n    if (this.textToSpeechSelected) {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        let message = \"enableTextToSpeech\";\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    } else {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        let message = \"disableTextToSpeech\";\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    }\n  }\n\n  setTextToSpeechIcons() {\n    if (this.textToSpeechSelected) {\n      this.currentTextToSpeechIcon = \"pi pi-eye\";\n    } else {\n      this.currentTextToSpeechIcon = \"pi pi-eye-slash\";\n    }\n  }\n\n  //step 1\n  setIncreaseButtonSizeIcons() {\n    if (this.increaseTextButtonSelected) {\n      this.currentIncreaseTextButtonIcon = \"pi pi-eye\";\n    } else {\n      this.currentIncreaseTextButtonIcon = \"pi pi-eye-slash\";\n    }\n  }\n\n  setAutoScrollIcons() {\n    if (this.autoScrollingSelected) {\n      this.currentAutoScrollIcon = \"pi pi-eye\";\n    } else {\n      this.currentAutoScrollIcon = \"pi pi-eye-slash\";\n    }\n  }\n\n  onFocusClick() {\n    this.focusSelected = !this.focusSelected;\n    this.setFocusIcons();\n\n    //chrome.storage.sync.set({'focusSelected': this.focusSelected});\n    if (this.focusSelected) {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        let message = \"enableFocusHoveredArea:\" + this.blurIntensity;\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    } else {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        chrome.tabs.sendMessage(tabs[0].id, \"disableFocusHoveredArea\");\n      });\n    }\n  }\n\n  updateBlurIntensity() {\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      let message = \"updateBlurIntensity:\" + this.blurIntensity;\n      chrome.tabs.sendMessage(tabs[0].id, message);\n    });\n  }\n\n  onTextHighlightingClick() {\n    this.textHighlightingSelected = !this.textHighlightingSelected;\n    this.setTextHighlightingIcons();\n\n    if (this.textHighlightingSelected) {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        let message = \"enableTextHighlighting\";\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    } else {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        let message = \"disableTextHighlighting\";\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    }\n  }\n\n  onAutoScrollButtonClick() {\n    this.autoScrollingSelected = !this.autoScrollingSelected;\n    this.setAutoScrollIcons();\n\n    if (this.autoScrollingSelected) {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        let message = \"enableAutoScrolling\";\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    } else {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        let message = \"disableAutoScrolling\";\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    }\n  }\n\n  //step 2\n  onIncreaseTextButtonClick() {\n    this.increaseTextButtonSelected = !this.increaseTextButtonSelected;\n    this.setIncreaseButtonSizeIcons();\n\n    if (this.increaseTextButtonSelected) {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        let message = \"enableIncreaseTextButton:\" + this.color;\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    } else {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        chrome.tabs.sendMessage(tabs[0].id, \"disableIncreaseTextButton\");\n      });\n    }\n  }\n  updateButtonColor() {\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      let message = \"updateButtonColor:\" + this.color;\n      chrome.tabs.sendMessage(tabs[0].id, message);\n    });\n  }\n  updateTextSize() {\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      let message = \"updateTextSize:\" + this.textSize;\n      console.log(message);\n      chrome.tabs.sendMessage(tabs[0].id, message);\n    });\n  }\n}\n","<div class=\"body\">\n  <div class=\"header\">\n    <img src=\"icon.png\" alt=\"Logo\" class=\"center\" />\n  </div>\n  <div class=\"space\">\n    <div>\n      <p-panel\n        header=\"Focus Content\"\n        [toggleable]=\"true\"\n        iconPos=\"end\"\n        collapsed=\"true\"\n        [class.color]=\"focusIconColor\"\n      >\n        <ng-template pTemplate=\"icons\">\n          <button\n            pButton\n            class=\"p-panel-header-icon p-link\"\n            (click)=\"onFocusClick()\"\n            pTooltip=\"Toggle focused content on the page\"\n          >\n            <span [class]=\"currentFocusIcon\" style=\"font-size: 1.5rem\"></span>\n          </button>\n        </ng-template>\n        <div>\n          <p>\n            This helps focus on what matters. Improve your focus by turning on\n            this extension. It will blur the content around the page, keeping\n            important headers like navigation bars, in order to make the process\n            of activities like reading a Wikepedia article more efficient!\n          </p>\n          <h5 *ngIf=\"focusSelected\">Blur Intensity: {{ blurIntensity }}px</h5>\n          <h5 *ngIf=\"!focusSelected\">Toggle focus to change blur intensity</h5>\n          <p-slider\n            [animate]=\"true\"\n            [(ngModel)]=\"blurIntensity\"\n            [step]=\"1\"\n            [min]=\"1\"\n            [max]=\"6\"\n            [disabled]=\"!focusSelected\"\n            (onSlideEnd)=\"updateBlurIntensity()\"\n          ></p-slider>\n        </div>\n      </p-panel>\n    </div>\n\n    <div class=\"less-space\">\n      <p-panel\n        header=\"Text Highlighting\"\n        [toggleable]=\"true\"\n        iconPos=\"end\"\n        collapsed=\"true\"\n      >\n        <ng-template pTemplate=\"icons\">\n          <button\n            pButton\n            class=\"p-panel-header-icon p-link\"\n            (click)=\"onTextHighlightingClick()\"\n            pTooltip=\"Toggle text highlighting on the page\"\n          >\n            <span\n              [class]=\"currentTextHighlightingIcon\"\n              style=\"font-size: 1.5rem\"\n            ></span>\n          </button>\n        </ng-template>\n        <div>\n          <p>\n            This makes reading paragraphs and text alike a lot easier. It will\n            highlight the text you are reading in order to make for a smoother\n            reading experience.\n          </p>\n        </div>\n      </p-panel>\n    </div>\n\n    <div class=\"less-space\">\n      <p-panel\n        header=\"Increase Text and Button Sizing\"\n        [toggleable]=\"true\"\n        iconPos=\"end\"\n        collapsed=\"true\"\n        [class.color]=\"focusIconColor\"\n      >\n        <ng-template pTemplate=\"icons\">\n          <button\n            pButton\n            class=\"p-panel-header-icon p-link\"\n            (click)=\"onIncreaseTextButtonClick()\"\n            pTooltip=\"Toggle increased text and button sizing\"\n          >\n            <span\n              [class]=\"currentIncreaseTextButtonIcon\"\n              style=\"font-size: 1.5rem\"\n            ></span>\n          </button>\n        </ng-template>\n\n        <div>\n          <p>\n            This helps increase the size of button and select its color to make\n            buttons easier to read.\n          </p>\n          <h5 *ngIf=\"increaseTextButtonSelected\">\n            Button Color: {{ color }}px\n          </h5>\n          <h5 *ngIf=\"!increaseTextButtonSelected\">Select button color</h5>\n          <p-colorPicker\n            [(ngModel)]=\"color\"\n            [inline]=\"true\"\n            [disabled]=\"!increaseTextButtonSelected\"\n            (onChange)=\"updateButtonColor()\"\n          ></p-colorPicker>\n          <h5 *ngIf=\"increaseTextButtonSelected\">Text Size: {{ textSize }}%</h5>\n          <h5 *ngIf=\"!increaseTextButtonSelected\">Select text size</h5>\n          <p-slider\n            [animate]=\"true\"\n            [(ngModel)]=\"textSize\"\n            [step]=\"10\"\n            [min]=\"110\"\n            [max]=\"150\"\n            [disabled]=\"!increaseTextButtonSelected\"\n            (onSlideEnd)=\"updateTextSize()\"\n          ></p-slider>\n        </div>\n      </p-panel>\n    </div>\n\n    <div class=\"less-space\">\n      <p-panel\n        header=\"Text-to-Speech\"\n        [toggleable]=\"true\"\n        iconPos=\"end\"\n        collapsed=\"true\"\n      >\n        <ng-template pTemplate=\"icons\">\n          <button\n            pButton\n            class=\"p-panel-header-icon p-link\"\n            (click)=\"onTextToSpeechClick()\"\n            pTooltip=\"Toggle text-to-speech on this page\"\n          >\n            <span\n              [class]=\"currentTextToSpeechIcon\"\n              style=\"font-size: 1.5rem\"\n            ></span>\n          </button>\n        </ng-template>\n        <div>\n          <p>\n            It will speak whatever text is being hovered on. Use arrow keys to\n            change the hover.\n          </p>\n        </div>\n      </p-panel>\n    </div>\n\n    <div class=\"less-space\">\n      <p-panel\n        header=\"Auto Scrolling\"\n        [toggleable]=\"true\"\n        iconPos=\"end\"\n        collapsed=\"true\"\n      >\n        <ng-template pTemplate=\"icons\">\n          <button\n            pButton\n            class=\"p-panel-header-icon p-link\"\n            (click)=\"onAutoScrollButtonClick()\"\n            pTooltip=\"Toggle keyboard auto scrolling on the page\"\n          >\n            <span\n              [class]=\"currentAutoScrollIcon\"\n              style=\"font-size: 1.5rem\"\n            ></span>\n          </button>\n        </ng-template>\n        <div>\n          <p>\n            This lets you scroll through content easy! Use the up and down arrow\n            keys to jump to important content quickly.\n          </p>\n        </div>\n      </p-panel>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {ButtonModule} from 'primeng/button';\nimport {CardModule} from 'primeng/card';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {SelectButtonModule} from 'primeng/selectbutton';\nimport {PanelModule} from 'primeng/panel';\nimport {MenuModule} from 'primeng/menu';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {TooltipModule} from 'primeng/tooltip';\nimport {SliderModule} from 'primeng/slider';\n\nimport {ColorPickerModule} from 'primeng/colorpicker';\n\n\n@NgModule({\n  declarations: [\n    AppComponent, \n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    AppRoutingModule,\n    ButtonModule,\n    CardModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SelectButtonModule,\n    PanelModule,\n    MenuModule,\n    TooltipModule,\n    SliderModule,\n    ColorPickerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: []\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}