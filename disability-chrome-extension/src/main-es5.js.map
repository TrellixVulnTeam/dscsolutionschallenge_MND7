{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","title","focusSelected","textHighlightingSelected","increaseTextButtonSelected","textToSpeechSelected","focusIconColor","currentFocusIcon","currentTextHighlightingIcon","currentIncreaseTextButtonIcon","currentTextToSpeechIcon","blurIntensity","setFocusIcons","chrome","tabs","query","active","currentWindow","message","sendMessage","id","setTextHighlightingIcons","setTextToSpeechIcons","setIncreaseButtonSizeIcons","color","updateBlurIntensity","updateButtonColor","AppModule","routes","AppRoutingModule","forRoot","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/// <reference types=\"chrome\"/>\nimport { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'disability-chrome-extension';\n  focusSelected = false;\n  textHighlightingSelected = false;\n  increaseTextButtonSelected = false;\n  textToSpeechSelected = false;\n  focusIconColor = \"red\";\n  currentFocusIcon = \"pi pi-eye-slash\";\n  currentTextHighlightingIcon = \"pi pi-eye-slash\";\n  currentIncreaseTextButtonIcon = \"pi pi-eye-slash\";\n  currentTextToSpeechIcon = \"pi pi-eye-slash\";\n  blurIntensity: number = 3;\n  color: string;\n\n  ngOnInit() {\n    // chrome.storage.sync.get(['focusSelected'], function(result) {\n    //   this.focusSelected = result;\n    //   this.setFocusIcons();\n    // });\n  }\n\n  setFocusIcons() {\n    if (this.focusSelected) {\n      this.currentFocusIcon = \"pi pi-eye\";\n      this.focusIconColor = \"green\";\n    } else {\n      this.currentFocusIcon = \"pi pi-eye-slash\";\n      this.focusIconColor = \"red\";\n    }\n  }\n\n  setTextHighlightingIcons() {\n    if (this.textHighlightingSelected) {\n      this.currentTextHighlightingIcon = \"pi pi-eye\";\n    } else {\n      this.currentTextHighlightingIcon = \"pi pi-eye-slash\";\n    }\n  }\n\n  setTextToSpeechIcons() {\n    if (this.textToSpeechSelected) {\n      this.currentTextToSpeechIcon = \"pi pi-eye\";\n    } else {\n      this.currentTextToSpeechIcon = \"pi pi-eye-slash\";\n    }\n  }\n\n  onFocusClick() {\n    this.focusSelected = !this.focusSelected;\n    this.setFocusIcons();\n    \n    \n    //chrome.storage.sync.set({'focusSelected': this.focusSelected});\n    if (this.focusSelected) {\n      chrome.tabs.query({ active: true, currentWindow: true }, tabs => {\n        let message = \"enableFocusHoveredArea:\" + this.blurIntensity;\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    } else {\n      chrome.tabs.query({ active: true, currentWindow: true }, tabs => {\n        chrome.tabs.sendMessage(tabs[0].id, \"disableFocusHoveredArea\");\n      });\n    }\n  }\n\n  updateBlurIntensity() {\n    chrome.tabs.query({ active: true, currentWindow: true }, tabs => {\n      let message = \"updateBlurIntensity:\" + this.blurIntensity;\n      chrome.tabs.sendMessage(tabs[0].id, message);\n    });\n  }\n\n\n\n  onTextHighlightingClick() {\n    this.textHighlightingSelected = !this.textHighlightingSelected;\n    this.setTextHighlightingIcons();\n\n    if (this.textHighlightingSelected) {\n      chrome.tabs.query({ active: true, currentWindow: true }, tabs => {\n        let message = \"enableTextHighlighting\";\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    } else {\n      chrome.tabs.query({ active: true, currentWindow: true }, tabs => {\n        let message = \"disableTextHighlighting\";\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    }\n  }\n\n  onTextToSpeechClick() {\n    this.textToSpeechSelected = !this.textToSpeechSelected;\n    this.setTextToSpeechIcons();\n\n    if (this.textToSpeechSelected) {\n      chrome.tabs.query({ active: true, currentWindow: true }, tabs => {\n        let message = \"enableTextToSpeech\";\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    } else {\n      chrome.tabs.query({ active: true, currentWindow: true }, tabs => {\n        let message = \"disableTextToSpeech\";\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    }\n  }\n\n\n  //step 1\n  setIncreaseButtonSizeIcons() {\n    if (this.increaseTextButtonSelected) {\n      this.currentIncreaseTextButtonIcon = \"pi pi-eye\";\n    } else {\n      this.currentIncreaseTextButtonIcon = \"pi pi-eye-slash\";\n    }\n  }\n\n//step 2\n  onIncreaseTextButtonClick() {\n    this.increaseTextButtonSelected = !this.increaseTextButtonSelected;\n    this.setIncreaseButtonSizeIcons();\n\n    if (this.increaseTextButtonSelected) {\n      chrome.tabs.query({ active: true, currentWindow: true }, tabs => {\n        let message = \"enableIncreaseTextButton:\"  + this.color;\n        chrome.tabs.sendMessage(tabs[0].id, message);\n      });\n    } else {\n      chrome.tabs.query({active: true, currentWindow: true}, tabs => {\n        chrome.tabs.sendMessage(tabs[0].id, \"disableIncreaseTextButton\");\n      });\n    }\n  }\n//step 3\n  updateButtonColor() {\n    chrome.tabs.query({ active: true, currentWindow: true }, tabs => {\n      let message = \"updateButtonColor:\" + this.color;\n      chrome.tabs.sendMessage(tabs[0].id, message);\n    });\n  }\n\n}\n\n","<div class=\"body\">\n  <div class=\"header\">\n    <img src=\"icon.png\" alt=\"Logo\" class=\"center\">\n  </div>\n  <div class=\"space\">\n    <div>\n      <p-panel header=\"Focus Content\" [toggleable]=\"true\" iconPos=\"end\" collapsed=\"true\">\n        <ng-template pTemplate=\"icons\">\n          <button pButton class=\"p-panel-header-icon p-link\" (click)=\"onFocusClick()\" pTooltip=\"Toggle focused content on the page\">\n            <span [class]=\"currentFocusIcon\" style=\"font-size: 1.5rem\"></span>\n          </button>\n        </ng-template>\n        <div>\n          <p>\n            This helps focus on what matters. Improve your focus by turning on this extension.\n            It will blur the content around the page, keeping important headers like navigation bars, in order\n            to make the process of activities like reading a Wikepedia article more efficient!\n          </p>\n          <h5 *ngIf=\"focusSelected\">Blur Intensity: {{blurIntensity}}px</h5>\n          <h5 *ngIf=\"!focusSelected\">Toggle focus to change blur intensity</h5>\n          <p-slider [animate] = \"true\" [(ngModel)] = \"blurIntensity\" [step]=\"1\" [min]=\"1\" [max]=\"6\" [disabled]=\"!focusSelected\" (onSlideEnd)=\"updateBlurIntensity()\"></p-slider>\n        </div>\n      </p-panel>\n    </div>\n\n    <div class=\"less-space\">\n      <p-panel header=\"Text Highlighting\" [toggleable]=\"true\" iconPos=\"end\" collapsed=\"true\">\n        <ng-template pTemplate=\"icons\">\n          <button pButton class=\"p-panel-header-icon p-link\" (click)=\"onTextHighlightingClick()\" pTooltip=\"Toggle text highlighting on the page\">\n            <span [class]=\"currentTextHighlightingIcon\" style=\"font-size: 1.5rem\"></span>\n          </button>\n        </ng-template>\n        <div>\n          <p>\n            This makes reading paragraphs and text alike a lot easier. It will highlight the text you are\n            reading in order to make for a smoother reading experience.\n          </p>\n        </div>\n      </p-panel>\n    </div>\n\n    <div class=\"less-space\">\n      <p-panel header=\"Increase Text and Button Sizing\" [toggleable]=\"true\" iconPos=\"end\" collapsed=\"true\" [class.color]=\"focusIconColor\">\n        <ng-template pTemplate=\"icons\">\n          <button pButton class=\"p-panel-header-icon p-link\" (click)=\"onIncreaseTextButtonClick()\" pTooltip=\"Toggle increased text and button sizing\">\n            <span [class]=\"currentIncreaseTextButtonIcon\" style=\"font-size: 1.5rem\"></span>\n          </button>\n        </ng-template>\n\n        <div>\n          <p>\n            This helps increase the size of button and select its color to make buttons easier to read.\n          </p>\n          <h5 *ngIf=\"increaseTextButtonSelected\">Button Color: {{color}}px</h5>\n          <h5 *ngIf=\"!increaseTextButtonSelected\">Select button color</h5>\n          <p-colorPicker [(ngModel)]= \"color\" [inline] = \"true\" [disabled]=\"!increaseTextButtonSelected\" (onChange)=\"updateButtonColor()\"></p-colorPicker>\n\n        </div>\n      </p-panel>\n    </div>\n\n    <div class=\"less-space\">\n      <p-panel header=\"Text-to-Speech\" [toggleable]=\"true\" iconPos=\"end\" collapsed=\"true\">\n        <ng-template pTemplate=\"icons\">\n          <button pButton class=\"p-panel-header-icon p-link\" (click)=\"onTextToSpeechClick()\" pTooltip=\"Toggle text-to-speech on this page\">\n            <span [class]=\"currentTextToSpeechIcon\" style=\"font-size: 1.5rem\"></span>\n          </button>\n        </ng-template>\n        <div>\n          <p>\n            It will speak whatever text is being hovered on. Use arrow keys to change the hover.\n          </p>\n        </div>\n      </p-panel>\n    </div>\n\n\n    \n\n    \n\n    \n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {ButtonModule} from 'primeng/button';\nimport {CardModule} from 'primeng/card';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {SelectButtonModule} from 'primeng/selectbutton';\nimport {PanelModule} from 'primeng/panel';\nimport {MenuModule} from 'primeng/menu';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {TooltipModule} from 'primeng/tooltip';\nimport {SliderModule} from 'primeng/slider';\n\nimport {ColorPickerModule} from 'primeng/colorpicker';\n\n\n@NgModule({\n  declarations: [\n    AppComponent, \n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    AppRoutingModule,\n    ButtonModule,\n    CardModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SelectButtonModule,\n    PanelModule,\n    MenuModule,\n    TooltipModule,\n    SliderModule,\n    ColorPickerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: []\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}